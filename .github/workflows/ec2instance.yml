name: Create an ec2 instance
on:
  workflow_dispatch:
    inputs:
      instance_name:
        description: 'Name of the AWS Instance'
        required: true
      aws_region:
        description: 'AWS Region for the instance'
        required: true
      instance_type:
        description: 'AWS instance type'
        required: true
      action:
        description: 'Action to perform (apply/destroy)'
        required: true
jobs:
  apply_ec2:
    runs-on: ubuntu-latest
    # Execute this step only if the action input is "apply"
    if: ${{ github.event.inputs.action == 'apply' }}

    steps:
    
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ github.event.inputs.aws_region }}

    - name: Terraform Init
      run: terraform init
      working-directory: .

    - name: Terraform Format
      run: terraform fmt
      working-directory: .

    - name: Terraform Validate
      run: terraform validate
      working-directory: .

    - name: Terraform Version and State List
      run: terraform state list
      working-directory: .

    - name: Terraform Apply
      run: terraform apply -var instance_name=${{ github.event.inputs.instance_name }} -var aws_region=${{ github.event.inputs.aws_region }} -var instance_type=${{ github.event.inputs.instance_type }} -auto-approve
      working-directory: .

  destroy_ec2:
    runs-on: ubuntu-latest

    # Execute this job only if the action input is "destroy"
    if: ${{ github.event.inputs.action == 'destroy' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ github.event.inputs.aws_region }}
    
    - name: Terraform Init
      run: terraform init
      working-directory: .
 
    - name: Terraform FMT
      run: terraform fmt
      working-directory: .

    - name: Terraform Version and State List
      run: terraform state list
      working-directory: .
  
    - name: Terraform Destroy
      run: terraform destroy -var instance_name=${{ github.event.inputs.instance_name }} -var aws_region=${{ github.event.inputs.aws_region }} -var instance_type=${{ github.event.inputs.instance_type }} -auto-approve
      working-directory: .